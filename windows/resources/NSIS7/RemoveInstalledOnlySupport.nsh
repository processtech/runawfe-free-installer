!ifndef REMOVE_ONLY_INSTALLED_NSH
!define REMOVE_ONLY_INSTALLED_NSH

!verbose push
   !verbose 3

!ifndef RUNA_UNINSTALL.LOG_NSH
   !define RUNA_UNINSTALL.LOG_NSH

!ifndef INSTDIR_REG_ROOT | INSTDIR_REG_KEY
   !error "You must properly define both INSTDIR_REG_ROOT and INSTDIR_REG_KEY"
!endif

!ifndef UNINST_LOG_VERBOSE
   !define UNINST_LOG_VERBOSE    "3"
!endif

!verbose pop

!verbose push
   !verbose ${UNINST_LOG_VERBOSE}

!define UNLOG_PART     "$PLUGINSDIR\part."
!define UNLOG_TEMP     "$PLUGINSDIR\unlog.tmp"
!define EXCLU_LIST     "$PLUGINSDIR\exclude.tmp"
!define UNLOG_HEAD     "=========== Uninstaller Log please do not edit this file ==========="

 var unlog_tmp_1
 var unlog_tmp_2
 var unlog_tmp_3
 var UNINST_DAT
 
 var currentLogDir

!include FileFunc.nsh
!include TextFunc.nsh

!insertmacro Locate
!insertmacro un.Locate
!insertmacro DirState
!insertmacro un.DirState
!insertmacro FileJoin
!insertmacro TrimNewLines
!insertmacro un.TrimNewLines

;.............................. Uninstaller Macros ..............................
!macro UNINSTALL.LOG_UNINSTALL logFile
  !verbose push
     !verbose ${UNINST_LOG_VERBOSE}

    StrCmp "$PLUGINSDIR" "" 0 +2
      InitPluginsDir

    !ifdef ID_LogUninstall
       !undef ID_LogUninstall
    !endif
    !define ID_LogUninstall ${__LINE__}

    CopyFiles "${logFile}" "${UNLOG_TEMP}"

    loop_${ID_LogUninstall}:
    FileOpen $unlog_tmp_2 "${UNLOG_TEMP}" r

    StrCpy $unlog_tmp_1 0
    !insertmacro UninstallFiles
    FileClose $unlog_tmp_2
    StrCmp $unlog_tmp_1 "0" 0 loop_${ID_LogUninstall}

  !verbose pop
!macroend

!macro UninstallFiles
   !ifdef ID_UninstallFiles
        !undef ID_UninstallFiles
   !endif
   !define ID_UninstallFiles ${__LINE__}
   ClearErrors
    start_${ID_UninstallFiles}:
        FileRead $unlog_tmp_2 "$unlog_tmp_3" ${NSIS_MAX_STRLEN}
        ${un.TrimNewLines} "$unlog_tmp_3" "$unlog_tmp_3"
        StrCmp "$unlog_tmp_3" "${UNLOG_HEAD}" start_${ID_UninstallFiles}
        IfErrors nolog_${ID_UninstallFiles}

        IfFileExists "$unlog_tmp_3\*.*" isdir_${ID_UninstallFiles}
        IfFileExists "$unlog_tmp_3" 0 end_${ID_UninstallFiles}
        Delete "$unlog_tmp_3"
        IfErrors 0 +3
        ClearErrors ;on case directory is not empty
        goto end_${ID_UninstallFiles}

        StrCpy $unlog_tmp_1 1
        goto end_${ID_UninstallFiles}

    isdir_${ID_UninstallFiles}:
        RmDir "$unlog_tmp_3"
        IfErrors 0 +3
        ClearErrors ;on case directory is not empty
        goto end_${ID_UninstallFiles}

        StrCpy $unlog_tmp_1 1
        goto end_${ID_UninstallFiles}

    end_${ID_UninstallFiles}:
	goto start_${ID_UninstallFiles}
    nolog_${ID_UninstallFiles}:
        ClearErrors
!macroend
;................................. Installer Macros .................................

  Function _LocateCallBack_Function_Install
    loop:
        FileRead $unlog_tmp_2 "$unlog_tmp_3" ${NSIS_MAX_STRLEN}
        ${TrimNewLines} "$unlog_tmp_3" "$unlog_tmp_3"
        IfErrors 0 +4
        ClearErrors
        FileSeek $unlog_tmp_2 0 SET
        goto next
        StrCmp "$R9" "$unlog_tmp_3" end
        goto loop
    next:
	FileWrite $unlog_tmp_1 "$R9$\r$\n"
    end:
	Push 0
  FunctionEnd

!define UnLog_Install_Func_CallBack "_LocateCallBack_Function_Install"


!macro UNINSTALL.LOG_PREPARE_INSTALL logFile
  !verbose push
     !verbose ${UNINST_LOG_VERBOSE}

      Push $0
      Push $1
        ClearErrors
        StrCmp "$PLUGINSDIR" "" 0 +2
           InitPluginsDir

        GetTempFileName "$1"
        FileOpen $0 "$1" w
        FileWrite $0 "${UNLOG_HEAD}$\r$\n"
        FileClose $0
        Rename "$1" "${UNLOG_TEMP}"
      Pop $1
      Pop $0

  !verbose pop
!macroend


!macro UNINSTALL.LOG_UPDATE_INSTALL logFile
  !verbose push
     !verbose ${UNINST_LOG_VERBOSE}
        Delete "${logFile}"
        Rename "${UNLOG_TEMP}" "${logFile}"
  !verbose pop
!macroend


!define uninstall.log_install "!insertmacro UNINSTALL.LOG_INSTALL"

!macro UNINSTALL.LOG_INSTALL FileOpenWrite FileOpenRead TargetDir
  !verbose push
     !verbose ${UNINST_LOG_VERBOSE}

	FileOpen $unlog_tmp_1 "${FileOpenWrite}" w
	FileOpen $unlog_tmp_2 "${FileOpenRead}" r

	${Locate} "${TargetDir}" "/L=FD" "${UnLog_Install_Func_CallBack}"
	IfErrors 0 +2
	MessageBox MB_ICONEXCLAMATION|MB_OK "Error creating uninstall Log." /SD IDOK

	FileClose $unlog_tmp_1
	FileClose $unlog_tmp_2

  !verbose pop
!macroend


!define uninstall.log_mergeID "!insertmacro UNINSTALL.LOG_MERGE"

!macro UNINSTALL.LOG_MERGE UnlogPart
  !verbose push
     !verbose ${UNINST_LOG_VERBOSE}

        ${FileJoin} "${UNLOG_TEMP}" "${UnlogPart}" "${UNLOG_TEMP}"

  !verbose pop
!macroend


!macro UNINSTALL.LOG_OPEN_INSTALL
  !verbose push
     !verbose ${UNINST_LOG_VERBOSE}
        ${uninstall.log_install} "${EXCLU_LIST}" "$UNINST_DAT" "$OUTDIR"
        StrCpy $currentLogDir "$OUTDIR"
  !verbose pop
!macroend


!macro UNINSTALL.LOG_CLOSE_INSTALL
  !verbose push
     !verbose ${UNINST_LOG_VERBOSE}

   !define ID ${__LINE__}

        ${uninstall.log_install} "${UNLOG_PART}${ID}" "${EXCLU_LIST}" "$currentLogDir"
        ${uninstall.log_mergeID} "${UNLOG_PART}${ID}"

   !undef ID

  !verbose pop
!macroend

!endif

!verbose pop
!endif